var Game = new Torch.Game("canvas", 1280,720, "MarioClone");function Load(){    //Game.Load.Texture("Art/space.svg", "background");    //Game.Load.Sound("Art/Bonus/sfx_laser1.ogg", "shot_sound");    Game.Load.Texture("Art/brick.png", "StoneBlock");    Game.Load.Texture("Art/ground.png", "GrassBlock");    Game.Load.Texture("Art/mountain.png", "Mountain");    Game.Load.Texture("Art/tree.png", "Tree");    Game.Load.Texture("Art/water_main.png", "WaterMain");    Game.Load.Texture("Art/water_top.png", "WaterTop");    Game.Load.Texture("Art/player.png", "player");    Game.Load.TextureSheet("Art/player_idle.png", "player_idle", 48, 16, 16, 16);    Game.Load.TextureSheet("Art/knight_run_right.png", "player_right", 56, 16, 16, 16);    //Game.Load.TextureSheet("Art/player_right.png", "player_right", 80, 16, 16, 16);    DayTimeOrbsAssets(Game);    DoorAssets(Game);    EnemyAssets(Game);}function Update(){    Spawner.Update();    Game.DayTimeSystem.Update();    if (Game.Keys.P.down) Game.paused = true;    if (Game.Keys.U.down) Game.paused = false;    $("#sprites").html(Game.spriteList.length);}function Draw(){}function Init(){    pixl.pixelSize = 1;    Game.Gravity = 0.001;    Game.Clear("#0052cc");    Spawner.Spawn(TestingWorld.Room1);    Game.PixelScale();    Game.SCALE = 4;    Game.Player = new Player();    Game.DayTimeSystem = new DayTimeSystem();    //Game.Assets.GetSound("background").play();    //Game.Assets.GetSound("background").loop = true;    Game.savedPlayerLoc = {x: 0, y: 0, needed: false};    $(window).blur(function(){        Game.paused = true;        Game.savedPlayerLoc.x = Game.Player.Rectangle.x;        Game.savedPlayerLoc.y = Game.Player.Rectangle.y;        Game.savedPlayerLoc.needed = true;    });    $(window).focus(function(){        Game.paused = false;        if (Game.savedPlayerLoc.needed)        {            Game.Player.Rectangle.x = 10;            Game.Player.Rectangle.y = 10;        }    });    Game.UnSpawn = function()    {        var sprites = Game.spriteList;        for (var i = 0; i < sprites.length; i++)        {            if (!sprites[i].PLAYER)            {                sprites[i].Trash();            }        }    }    Tests();}Game.Start(Load, Update, Draw, Init);//Torch.Debug(Game);