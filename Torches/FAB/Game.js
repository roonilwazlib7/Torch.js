var Game = new Torch.Game("canvas", 1000,650, "samplegame");var LevelText = function(text){    text.DrawParams = {alpha: 1};    text.Update = function()    {        var that = this;        that.DrawParams.alpha -= 0.0005 * Game.deltaTime;        if (that.DrawParams.alpha <= 0)        {            Game.Remove(that);        }    }}var WinGame = function(){    Game.Player.Update = function(){};    if (!Game.hasWon)    {        var t1 = new Torch.Text([{text: "You Win!!", font: "48px Impact bold", fillStyle: "green"}], 460, 300, 48);        var t2 = new Torch.Text([{text: Game.Player.score +" FAB Vocab words collected!!", font: "28px Impact bold", fillStyle: "green"}], 460, 360, 28);        Game.Add(t1);        Game.Add(t2);        Game.hasWon = true;        // for (var i = 0; i < Game.Brain.fabTexts.length; i++)        // {        //     var fab = Game.Brain.fabTexts[i];        //     var point = { x: 100 + Math.random() * 800, y: 100 + Math.random() * 400, width: 10, height: 10};        //        //     fab.Update = function()        //     {        //         if (!fab.Rectangle.Intersects(point))        //         {        //             var moveVec = new Torch.Vector(point.x - fab.Rectangle.x, point.y - fab.Rectangle.y);        //             moveVec.Normalize();        //             fab.Rectangle.x += Game.deltaTime * moveVec.x;        //             fab.Rectangle.y += Game.deltaTime * moveVec.y;        //         }        //        //        //     }        // }    }}function Load(){    Game.Load.Texture("Art/space.svg", "background");    //Player    Game.Load.Texture("Art/player.png", "player_idle");    Game.Load.Texture("Art/playerRight.png", "player_right");    Game.Load.Texture("Art/playerLeft.png", "player_left");    //Game.Load.TextureSheet("Sample/playerRun.png", "runRight", 320, 64, 64, 64);    Game.Load.Texture("Art/laserGreen.png", "bullet_player");    Game.Load.Texture("Art/PNG/Lasers/laserRed10.png", "bullet_player_powerup");    Game.Load.Texture("Art/laserGreenShot.png", "bullet_player_hit");    Game.Load.Texture("Art/enemyUFO.png", "enemy_1");    Game.Load.Texture("Art/PNG/ufoBlue.png", "enemy_2");    Game.Load.Texture("Art/PNG/ufoGreen.png", "enemy_3");    Game.Load.Texture("Art/PNG/ufoYellow.png", "enemy_4");    Game.Load.Texture("Art/powerup.jpg", "powerup");    Game.Load.Sound("Art/Bonus/sfx_laser1.ogg", "shot_sound");    Game.Load.Sound("Art/Bonus/sfx_lose.ogg", "lose_sound");    Game.Load.Sound("Art/Bonus/sfx_zap.ogg","enemy_die_sound");    Game.Load.Sound("Art/Bonus/sfx_shieldUp.ogg", "collect_fab_sound");    Game.Load.Sound("Art/Bonus/sfx_twoTone.ogg", "powerup_sound");    Game.Load.Sound("Art/bg.mp3", "background");}function Update(){    Game.Scene.Update();    if (Game.wordCount) Game.Remove(Game.wordCount);    Game.wordCount = new Torch.Text([{text: "Words: " + Game.Player.score, font: "16px Impact", fillStyle: "Green"}], 25, 600, 16);    Game.Add(Game.wordCount);    if (Game.AllEnemiesAreDead())    {        if (Game.outOfEnemies)        {            WinGame();        }        else if(!Game.lose){            Game.LoadEnemies();        }    }}function Draw(){}function Init(){    Game.Scene = new Scene();    Game.Player = new Player();    Game.powerup = new Powerup();    var positions = [100,400,700,900];    Game.shipCount = 1;    Game.wordIndex = 0;    Game.level = 0;    Game.outOfEnemies = false;    Game.LoadEnemies = function(){        //new leve;        Game.enemies = [];        Game.shipCount = 0;        Game.HealthInc = 0;        for (var i = Game.wordIndex; i < Game.wordIndex + 99 ; i+=4)        {            var yPos = -100 * (Game.shipCount / 1.4);            for (var j = 0; j < 4; j++)            {                if (!FAB[i+j]){                    Game.outOfEnemies = true;                    break;                }                if ( (i+j) % 10 == 0 ){                    Game.level++;                }                var ene = new Enemy(positions[j], yPos , FAB[i+j]);                ene.index = i+j;                Game.enemies.push(ene);                Game.shipCount++;            }        }        Game.wordIndex += 10;        Game.deadEnemies = 0;    }    Game.Lose = function(){        Game.spriteList = [];    }    Game.LoadEnemies();    Game.Assets.GetSound("background").play();    Game.Assets.GetSound("background").loop = true;    //Game.Add(new Torch.Text([{text: "Testing, 1, 2, 3", font: "20px Impact", fillStyle: "red", background:"yellow"}], 50, 50, 20));}Game.Start(Load, Update, Draw, Init);Torch.Debug(Game);Game.AllEnemiesAreDead = function(){    var dead = true;    for (var i = 0; i < Game.enemies.length; i++)    {        if (!Game.enemies[i].trash) dead = false;    }    return dead;}