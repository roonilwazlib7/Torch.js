// Generated by CoffeeScript 1.10.0
(function() {
  var Color;

  Color = (function() {
    function Color(rOrHex, g, b, a) {
      this.hex = "";
      this.Red = 0;
      this.Green = 0;
      this.Blue = 0;
      this.Alpha = 1;
      this.Init(rOrHex, g, b, a);
    }

    Color.prototype.Init = function(rOrHex, g, b, a) {
      if (g === void 0 && g !== null) {
        return this.GetHexFromRGB(rOrHex, g, b, a);
      } else {
        return this.GetRGBFromHex(rOrHex);
      }
    };

    Color.prototype.GetHexadecimal = function(dec, a) {
      var hexa;
      hexa = Math.round(dec * a).toString(16);
      if (hexa.length === 1) {
        hexa = "0" + hexa;
      }
      return hexa;
    };

    Color.prototype.GetHexFromRGB = function(r, g, b, a) {
      this.Red = r;
      this.Green = g;
      this.Blue = b;
      this.Alpha = a;
      return this.hex = "#" + this.GetHexadecimal(r, a) + this.GetHexadecimal(g, a) + this.GetHexadecimal(b, a);
    };

    Color.prototype.GetRGBFromHex = function() {
      var hexBlue, hexGreen, hexRed;
      this.hex = hex.split("#")[1];
      hexRed = this.hex.slice(0, 2);
      hexGreen = this.hex.slice(2, 4);
      hexBlue = this.hex.slice(4, 6);
      this.Red = parseInt(hexRed, 16);
      this.Blue = parseInt(hexBlue, 16);
      this.Green = parseInt(hexGreen, 16);
      return this.hex = '#' + this.hex;
    };

    Color.prototype.BlendHex = function() {
      return this.GetRGBFromHex(this.hex);
    };

    Color.prototype.BlendRGB = function() {
      return this.GetHexFromRGB(this.Red, this.Green, this.Blue, this.Alpha);
    };

    Color.prototype.GetRGBString = function() {
      return "rgba(" + this.Red + "," + this.Green + "," + this.Blue + "," + this.Alpha + ");";
    };

    return Color;

  })();

  Color.Red = new Color(256, 0, 0, 1);

  Color.Green = new Color(0, 256, 0, 1);

  Color.Blue = new Color(0, 0, 256, 1);

  Color.Flame = new Color("#ff8000");

  Color.Ruby = new Color("#e60000");

  Torch.Color = Color;

}).call(this);
