// Generated by CoffeeScript 1.10.0
(function() {
  var CanvasRenderer, exports;

  exports = this;

  CanvasRenderer = (function() {
    function CanvasRenderer(sprite) {
      this.sprite = sprite;
    }

    CanvasRenderer.prototype.Draw = function() {
      var DrawParams, DrawRec, Params, drawParams, frame, ref;
      DrawRec = new Torch.Rectangle(this.sprite.Rectangle.x, this.sprite.Rectangle.y, this.sprite.Rectangle.width, this.sprite.Rectangle.height);
      if (this.sprite.fixed) {
        DrawRec.x -= this.sprite.game.Viewport.x;
        DrawRec.y -= this.sprite.game.Viewport.y;
      }
      if (this.sprite.TexturePack) {
        return this.sprite.game.Draw(this.sprite.GetCurrentDraw(), DrawRec, this.sprite.DrawParams);
      } else if (this.sprite.TextureSheet) {
        drawParams = (ref = this.sprite.DrawParams) != null ? ref : {};
        Params = Object.create(drawParams);
        frame = this.sprite.GetCurrentDraw();
        Params.clipX = frame.clipX;
        Params.clipY = frame.clipY;
        Params.clipWidth = frame.clipWidth;
        Params.clipHeight = frame.clipHeight;
        Params.IsTextureSheet = true;
        Params.rotation = this.sprite.rotation;
        Params.alpha = this.sprite.opacity;
        return this.sprite.game.Draw(this.sprite.DrawTexture, DrawRec, Params);
      } else if (this.sprite.DrawTexture) {
        DrawParams = {
          alpha: this.sprite.opacity,
          rotation: this.sprite.rotation
        };
        return this.sprite.game.Draw(this.sprite.GetCurrentDraw(), DrawRec, DrawParams);
      }
    };

    return CanvasRenderer;

  })();

  exports.CanvasRenderer = CanvasRenderer;

}).call(this);
