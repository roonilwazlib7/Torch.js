// Generated by CoffeeScript 1.10.0
(function() {
  var CanvasRenderer, exports;

  exports = this;

  CanvasRenderer = (function() {
    function CanvasRenderer(sprite) {
      this.sprite = sprite;
      this.game = this.sprite.game;
    }

    CanvasRenderer.prototype.Draw = function() {
      var cameraTransform, drawRec, frame;
      drawRec = new Torch.Rectangle(this.sprite.Position("x"), this.sprite.Position("y"), this.sprite.Width(), this.sprite.Height());
      cameraTransform = new Torch.Point(0, 0);
      drawRec.x += cameraTransform.x;
      drawRec.y += cameraTransform.y;
      if (this.sprite.TextureSheet) {
        frame = this.sprite.GetCurrentDraw();
        this.PreRender(drawRec);
        canvas.drawImage(this.sprite.DrawTexture.image, frame.clipX, frame.clipY, frame.clipWidth, frame.clipHeight, -drawRec.width / 2, -drawRec.height / 2, drawRec.width, drawRec.height);
        return this.PostRender();
      } else if (this.sprite.DrawTexture) {
        this.PreRender(drawRec);
        this.game.canvas.drawImage(this.sprite.DrawTexture.image, -drawRec.width / 2, -drawRec.height / 2, drawRec.width, drawRec.height);
        if (this.sprite.Body.DEBUG) {
          this.game.canvas.fillStyle = "green";
          this.game.canvas.globalAlpha = 0.5;
          this.game.canvas.fillRect(-drawRec.width / 2, -drawRec.height / 2, drawRec.width, drawRec.height);
        }
        return this.PostRender();
      }
    };

    CanvasRenderer.prototype.PreRender = function(drawRec) {
      var canvas;
      canvas = this.game.canvas;
      canvas.save();
      canvas.globalAlpha = this.sprite.Opacity();
      canvas.translate(drawRec.x + drawRec.width / 2, drawRec.y + drawRec.height / 2);
      return canvas.rotate(this.sprite.Rotation());
    };

    CanvasRenderer.prototype.PostRender = function() {
      var canvas;
      canvas = this.game.canvas;
      return canvas.restore();
    };

    return CanvasRenderer;

  })();

  exports.CanvasRenderer = CanvasRenderer;

}).call(this);
