// Generated by CoffeeScript 1.10.0
(function() {
  var PlayList,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Torch.Sound = {};

  PlayList = (function(superClass) {
    extend(PlayList, superClass);

    function PlayList(game, songList) {
      this.game = game;
      this.songList = songList;
      this.currentSong = this.songList[0];
      this.index = 0;
    }

    PlayList.prototype.Play = function() {
      this.game.Assets.GetSound(this.currentSong).volume = 0.7;
      this.game.Assets.GetSound(this.currentSong).play();
      return this;
    };

    PlayList.prototype.ShuffleArray = function(array) {
      var currentIndex, randomIndex, temporaryValue;
      currentIndex = array.length;
      temporaryValue = null;
      randomIndex = null;
      while (0 !== currentIndex) {
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex -= 1;
        temporaryValue = array[currentIndex];
        array[currentIndex] = array[randomIndex];
        array[randomIndex] = temporaryValue;
      }
      return array;
    };

    PlayList.prototype.Randomize = function() {
      this.songList = this.ShuffleArray(this.songList);
      this.currentSong = this.songList[0];
      return this;
    };

    PlayList.prototype.Update = function() {};

    if (PlayList.game.Assets.GetSound(PlayList.currentSong).currentTime >= PlayList.game.Assets.GetSound(PlayList.currentSong).duration) {
      PlayList.index++;
      PlayList.currentSong = PlayList.songList[PlayList.index];
      PlayList.Play();
      if (PlayList.index === PlayList.songList.length - 1) {
        PlayList.index = 0;
      }
    }

    return PlayList;

  })(Torch.GhostSprite);

}).call(this);
