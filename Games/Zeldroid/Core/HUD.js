// Generated by CoffeeScript 1.12.1
(function() {
  var HUD, Terminal, exports,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  exports = this;

  HUD = (function() {
    function HUD(game1) {
      var barHeight, barLeftMargin, barTopMargin, barWidth, healthText, psycheText;
      this.game = game1;
      barWidth = 300;
      barHeight = 50;
      barLeftMargin = -100;
      barTopMargin = 35;
      this.build = JSON.parse(this.game.File("package"));
      this.hud_background = new Torch.Sprite(this.game, 0, 0);
      this.hud_background.Bind.Texture("hud_background");
      this.hud_background.Size.Scale(1, 1);
      this.hud_background.drawIndex = 100;
      this.hud_background.Size.height = this.Height(5);
      this.hud_background.Size.width = window.innerWidth;
      this.hud_background.fixed = true;
      this.build_info = new Torch.Text(this.game, 0, 0, {
        text: "Zeldroid-dev-build:" + this.build.GameConfig.Build,
        color: "red"
      });
      this.terminal = new Terminal(this.game);
      this.healthBar = new Torch.Shapes.Box(this.game, 0, 0, barWidth, barHeight, "green", "green");
      this.healthBar.Grid.Align("top", "right");
      this.healthBar.Grid.Margin(barLeftMargin, barTopMargin);
      this.psycheBar = new Torch.Shapes.Box(this.game, 0, 0, barWidth, barHeight, "purple", "purple");
      this.psycheBar.Grid.Align("bottom", "right");
      this.psycheBar.Grid.Margin(barLeftMargin, -barTopMargin);
      healthText = new Torch.Text(this.game, 0, 0, {
        text: "HEALTH",
        font: "Impact",
        fontSize: 32,
        color: "white"
      });
      healthText.Grid.CenterVertical();
      psycheText = new Torch.Text(this.game, 0, 0, {
        text: "PSYCHE",
        font: "Impact",
        fontSize: 32,
        color: "white"
      });
      psycheText.Grid.CenterVertical();
      this.healthBar.Grid.Append(healthText);
      this.psycheBar.Grid.Append(psycheText);
      this.hud_background.Grid.Append(this.build_info).Append(this.terminal).Append(this.healthBar).Append(this.psycheBar);
      this.game.Camera.position.y += this.hud_background.Size.height;
    }

    HUD.Load = function(game) {
      game.Load.Texture("Assets/Art/hud_background.png", "hud_background");
      return game.Load.Texture("Assets/Art/terminal.png", "terminal");
    };

    HUD.prototype.BindEvents = function() {};

    HUD.prototype.Width = function(scale) {
      if (scale == null) {
        scale = 1;
      }
      return window.innerWidth / scale;
    };

    HUD.prototype.Height = function(scale) {
      if (scale == null) {
        scale = 1;
      }
      return window.innerHeight / scale;
    };

    return HUD;

  })();

  Terminal = (function(superClass) {
    extend(Terminal, superClass);

    Terminal.prototype.currentTextOutput = null;

    function Terminal(game) {
      var c;
      this.InitSprite(game, 0, 0);
      this.Bind.Texture("terminal");
      this.Size.Scale(2.5, 1.5);
      this.Grid.Center().CenterVertical();
      c = 1;
      this.DisplayText("Welcome to Zeldroid");
      this.game.Timer.SetScheduledEvent(5000, (function(_this) {
        return function() {
          var d;
          if (c % 2 === 0) {
            _this.DisplayText("Welcome to Zeldroid!");
          } else {
            d = new Date();
            _this.DisplayText("It is " + (d.getHours()) + ":" + (d.getMinutes()));
          }
          return c += 1;
        };
      })(this));
    }

    Terminal.prototype.Update = function() {
      return Terminal.__super__.Update.call(this);
    };

    Terminal.prototype.DisplayText = function(text) {
      var ref, textSprite;
      if ((ref = this.currentTextOutput) != null) {
        ref.Trash();
      }
      this.currentTextOutput = textSprite = new Torch.Text(this.game, 0, 0, {
        text: text,
        font: "Impact",
        color: "white",
        fontSize: 24
      });
      textSprite.Grid.Center().CenterVertical().Margin(0, 10);
      textSprite.opacity = 0;
      this.game.Tweens.Tween(textSprite.Grid.margin, 500, Torch.Easing.Smooth).To({
        top: 0
      });
      this.game.Tweens.Tween(textSprite, 500, Torch.Easing.Smooth).To({
        opacity: 1
      });
      return this.Grid.Append(textSprite);
    };

    return Terminal;

  })(Torch.Sprite);

  exports.HUD = HUD;

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSFVELmpzIiwic291cmNlUm9vdCI6Ii4uXFwuLlxcLi4iLCJzb3VyY2VzIjpbIkdhbWVzXFxaZWxkcm9pZFxcU3JjXFxIVUQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUFBLE1BQUEsc0JBQUE7SUFBQTs7O0VBQUEsT0FBQSxHQUFVOztFQUNKO0lBQ1csYUFBQyxLQUFEO0FBQ1QsVUFBQTtNQURVLElBQUMsQ0FBQSxPQUFEO01BQ1YsUUFBQSxHQUFXO01BQ1gsU0FBQSxHQUFZO01BQ1osYUFBQSxHQUFnQixDQUFDO01BQ2pCLFlBQUEsR0FBZTtNQUVmLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBSSxDQUFDLEtBQUwsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLElBQU4sQ0FBVyxTQUFYLENBQVg7TUFDVCxJQUFDLENBQUEsY0FBRCxHQUFzQixJQUFBLEtBQUssQ0FBQyxNQUFOLENBQWEsSUFBQyxDQUFBLElBQWQsRUFBb0IsQ0FBcEIsRUFBdUIsQ0FBdkI7TUFDdEIsSUFBQyxDQUFBLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBckIsQ0FBNkIsZ0JBQTdCO01BQ0EsSUFBQyxDQUFBLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBckIsQ0FBMkIsQ0FBM0IsRUFBNkIsQ0FBN0I7TUFDQSxJQUFDLENBQUEsY0FBYyxDQUFDLFNBQWhCLEdBQTRCO01BQzVCLElBQUMsQ0FBQSxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQXJCLEdBQThCLElBQUMsQ0FBQSxNQUFELENBQVEsQ0FBUjtNQUM5QixJQUFDLENBQUEsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFyQixHQUE2QixNQUFNLENBQUM7TUFDcEMsSUFBQyxDQUFBLGNBQWMsQ0FBQyxLQUFoQixHQUF3QjtNQUV4QixJQUFDLENBQUEsVUFBRCxHQUFrQixJQUFBLEtBQUssQ0FBQyxJQUFOLENBQVcsSUFBQyxDQUFBLElBQVosRUFBa0IsQ0FBbEIsRUFBcUIsQ0FBckIsRUFDZDtRQUFBLElBQUEsRUFBTSxx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QUFrQixDQUFsQixFQUFxQixDQUFyQixFQUNsQztRQUFBLElBQUEsRUFBTSxJQUFOO1FBQ0EsSUFBQSxFQUFNLFFBRE47UUFFQSxLQUFBLEVBQU8sT0FGUDtRQUdBLFFBQUEsRUFBVSxFQUhWO09BRGtDO01BTXRDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBaEIsQ0FBQSxDQUNlLENBQUMsY0FEaEIsQ0FBQSxDQUVlLENBQUMsTUFGaEIsQ0FFdUIsQ0FGdkIsRUFFMEIsRUFGMUI7TUFJQSxVQUFVLENBQUMsT0FBWCxHQUFxQjtNQUVyQixJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFiLENBQW1CLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBbkMsRUFBMkMsR0FBM0MsRUFBZ0QsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUE3RCxDQUFvRSxDQUFDLEVBQXJFLENBQ0k7UUFBQSxHQUFBLEVBQUssQ0FBTDtPQURKO01BR0EsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBYixDQUFtQixVQUFuQixFQUErQixHQUEvQixFQUFvQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQWpELENBQXdELENBQUMsRUFBekQsQ0FDSTtRQUFBLE9BQUEsRUFBUyxDQUFUO09BREo7YUFHQSxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU4sQ0FBYSxVQUFiO0lBckJTOzs7O0tBMUJNLEtBQUssQ0FBQzs7RUFrRDdCLE9BQU8sQ0FBQyxHQUFSLEdBQWM7QUF0SGQiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gdGhpc1xyXG5jbGFzcyBIVURcclxuICAgIGNvbnN0cnVjdG9yOiAoQGdhbWUpIC0+XHJcbiAgICAgICAgYmFyV2lkdGggPSAzMDBcclxuICAgICAgICBiYXJIZWlnaHQgPSA1MFxyXG4gICAgICAgIGJhckxlZnRNYXJnaW4gPSAtMTAwXHJcbiAgICAgICAgYmFyVG9wTWFyZ2luID0gMzVcclxuXHJcbiAgICAgICAgQGJ1aWxkID0gSlNPTi5wYXJzZShAZ2FtZS5GaWxlKFwicGFja2FnZVwiKSlcclxuICAgICAgICBAaHVkX2JhY2tncm91bmQgPSBuZXcgVG9yY2guU3ByaXRlKEBnYW1lLCAwLCAwKVxyXG4gICAgICAgIEBodWRfYmFja2dyb3VuZC5CaW5kLlRleHR1cmUoXCJodWRfYmFja2dyb3VuZFwiKVxyXG4gICAgICAgIEBodWRfYmFja2dyb3VuZC5TaXplLlNjYWxlKDEsMSlcclxuICAgICAgICBAaHVkX2JhY2tncm91bmQuZHJhd0luZGV4ID0gMTAwXHJcbiAgICAgICAgQGh1ZF9iYWNrZ3JvdW5kLlNpemUuaGVpZ2h0ID0gQEhlaWdodCg1KVxyXG4gICAgICAgIEBodWRfYmFja2dyb3VuZC5TaXplLndpZHRoID0gd2luZG93LmlubmVyV2lkdGhcclxuICAgICAgICBAaHVkX2JhY2tncm91bmQuZml4ZWQgPSB0cnVlXHJcblxyXG4gICAgICAgIEBidWlsZF9pbmZvID0gbmV3IFRvcmNoLlRleHQgQGdhbWUsIDAsIDAsXHJcbiAgICAgICAgICAgIHRleHQ6IFwiWmVsZHJvaWQtZGV2LWJ1aWxkOiN7QGJ1aWxkLkdhbWVDb25maWcuQnVpbGR9XCJcclxuICAgICAgICAgICAgY29sb3I6IFwicmVkXCJcclxuXHJcbiAgICAgICAgQHRlcm1pbmFsID0gbmV3IFRlcm1pbmFsKEBnYW1lKVxyXG5cclxuICAgICAgICBAaGVhbHRoQmFyID0gbmV3IFRvcmNoLlNoYXBlcy5Cb3goQGdhbWUsIDAsIDAsIGJhcldpZHRoLCBiYXJIZWlnaHQsIFwiZ3JlZW5cIiwgXCJncmVlblwiKVxyXG4gICAgICAgIEBoZWFsdGhCYXIuR3JpZC5BbGlnbihcInRvcFwiLCBcInJpZ2h0XCIpXHJcbiAgICAgICAgQGhlYWx0aEJhci5HcmlkLk1hcmdpbihiYXJMZWZ0TWFyZ2luLCBiYXJUb3BNYXJnaW4pXHJcblxyXG4gICAgICAgIEBwc3ljaGVCYXIgPSBuZXcgVG9yY2guU2hhcGVzLkJveChAZ2FtZSwgMCwgMCwgYmFyV2lkdGgsIGJhckhlaWdodCwgXCJwdXJwbGVcIiwgXCJwdXJwbGVcIilcclxuICAgICAgICBAcHN5Y2hlQmFyLkdyaWQuQWxpZ24oXCJib3R0b21cIiwgXCJyaWdodFwiKVxyXG4gICAgICAgIEBwc3ljaGVCYXIuR3JpZC5NYXJnaW4oYmFyTGVmdE1hcmdpbiwgLWJhclRvcE1hcmdpbilcclxuXHJcbiAgICAgICAgaGVhbHRoVGV4dCA9IG5ldyBUb3JjaC5UZXh0IEBnYW1lLCAwLCAwLFxyXG4gICAgICAgICAgICB0ZXh0OiBcIkhFQUxUSFwiXHJcbiAgICAgICAgICAgIGZvbnQ6IFwiSW1wYWN0XCJcclxuICAgICAgICAgICAgZm9udFNpemU6IDMyXHJcbiAgICAgICAgICAgIGNvbG9yOiBcIndoaXRlXCJcclxuICAgICAgICBoZWFsdGhUZXh0LkdyaWQuQ2VudGVyVmVydGljYWwoKVxyXG5cclxuICAgICAgICBwc3ljaGVUZXh0ID0gbmV3IFRvcmNoLlRleHQgQGdhbWUsIDAsIDAsXHJcbiAgICAgICAgICAgIHRleHQ6IFwiUFNZQ0hFXCJcclxuICAgICAgICAgICAgZm9udDogXCJJbXBhY3RcIlxyXG4gICAgICAgICAgICBmb250U2l6ZTogMzJcclxuICAgICAgICAgICAgY29sb3I6IFwid2hpdGVcIlxyXG4gICAgICAgIHBzeWNoZVRleHQuR3JpZC5DZW50ZXJWZXJ0aWNhbCgpXHJcblxyXG4gICAgICAgIEBoZWFsdGhCYXIuR3JpZC5BcHBlbmQoaGVhbHRoVGV4dClcclxuICAgICAgICBAcHN5Y2hlQmFyLkdyaWQuQXBwZW5kKHBzeWNoZVRleHQpXHJcblxyXG4gICAgICAgIEBodWRfYmFja2dyb3VuZC5HcmlkLkFwcGVuZChAYnVpbGRfaW5mbylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5BcHBlbmQoQHRlcm1pbmFsKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLkFwcGVuZChAaGVhbHRoQmFyKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLkFwcGVuZChAcHN5Y2hlQmFyKVxyXG5cclxuICAgICAgICBAZ2FtZS5DYW1lcmEucG9zaXRpb24ueSArPSBAaHVkX2JhY2tncm91bmQuU2l6ZS5oZWlnaHRcclxuXHJcbiAgICBATG9hZDogKGdhbWUpIC0+XHJcbiAgICAgICAgZ2FtZS5Mb2FkLlRleHR1cmUoXCJBc3NldHMvQXJ0L2h1ZF9iYWNrZ3JvdW5kLnBuZ1wiLCBcImh1ZF9iYWNrZ3JvdW5kXCIpXHJcbiAgICAgICAgZ2FtZS5Mb2FkLlRleHR1cmUoXCJBc3NldHMvQXJ0L3Rlcm1pbmFsLnBuZ1wiLCBcInRlcm1pbmFsXCIpXHJcblxyXG4gICAgQmluZEV2ZW50czogLT5cclxuXHJcbiAgICBXaWR0aDogKHNjYWxlID0gMSkgLT5cclxuICAgICAgICByZXR1cm4gd2luZG93LmlubmVyV2lkdGggLyBzY2FsZVxyXG5cclxuICAgIEhlaWdodDogKHNjYWxlID0gMSkgLT5cclxuICAgICAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0IC8gc2NhbGVcclxuXHJcblxyXG5jbGFzcyBUZXJtaW5hbCBleHRlbmRzIFRvcmNoLlNwcml0ZVxyXG4gICAgY3VycmVudFRleHRPdXRwdXQ6IG51bGxcclxuXHJcbiAgICBjb25zdHJ1Y3RvcjogKGdhbWUpIC0+XHJcbiAgICAgICAgQEluaXRTcHJpdGUoZ2FtZSwgMCwgMClcclxuICAgICAgICBAQmluZC5UZXh0dXJlKFwidGVybWluYWxcIilcclxuICAgICAgICBAU2l6ZS5TY2FsZSgyLjUsIDEuNSlcclxuXHJcbiAgICAgICAgQEdyaWQuQ2VudGVyKClcclxuICAgICAgICAgICAgIC5DZW50ZXJWZXJ0aWNhbCgpXHJcblxyXG4gICAgICAgICMgZGV2IHB1cnBvc2VzLCBzaG93aW5nIHN0dWZmIG9uIHRoZSBkZXYgY29uc29sZVxyXG4gICAgICAgIGMgPSAxXHJcbiAgICAgICAgQERpc3BsYXlUZXh0KFwiV2VsY29tZSB0byBaZWxkcm9pZFwiKVxyXG5cclxuICAgICAgICBAZ2FtZS5UaW1lci5TZXRTY2hlZHVsZWRFdmVudCA1MDAwLCA9PlxyXG4gICAgICAgICAgICBpZiBjICUgMiBpcyAwXHJcbiAgICAgICAgICAgICAgICBARGlzcGxheVRleHQoXCJXZWxjb21lIHRvIFplbGRyb2lkIVwiKVxyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICBkID0gbmV3IERhdGUoKVxyXG4gICAgICAgICAgICAgICAgQERpc3BsYXlUZXh0KFwiSXQgaXMgI3tkLmdldEhvdXJzKCl9OiN7ZC5nZXRNaW51dGVzKCl9XCIpXHJcbiAgICAgICAgICAgIGMgKz0gMVxyXG5cclxuICAgIFVwZGF0ZTogLT5cclxuICAgICAgICBzdXBlcigpXHJcblxyXG4gICAgRGlzcGxheVRleHQ6ICh0ZXh0KSAtPlxyXG4gICAgICAgIEBjdXJyZW50VGV4dE91dHB1dD8uVHJhc2goKVxyXG5cclxuICAgICAgICBAY3VycmVudFRleHRPdXRwdXQgPSB0ZXh0U3ByaXRlID0gbmV3IFRvcmNoLlRleHQgQGdhbWUsIDAsIDAsXHJcbiAgICAgICAgICAgIHRleHQ6IHRleHRcclxuICAgICAgICAgICAgZm9udDogXCJJbXBhY3RcIlxyXG4gICAgICAgICAgICBjb2xvcjogXCJ3aGl0ZVwiXHJcbiAgICAgICAgICAgIGZvbnRTaXplOiAyNFxyXG5cclxuICAgICAgICB0ZXh0U3ByaXRlLkdyaWQuQ2VudGVyKClcclxuICAgICAgICAgICAgICAgICAgICAgICAuQ2VudGVyVmVydGljYWwoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgIC5NYXJnaW4oMCwgMTApXHJcblxyXG4gICAgICAgIHRleHRTcHJpdGUub3BhY2l0eSA9IDBcclxuXHJcbiAgICAgICAgQGdhbWUuVHdlZW5zLlR3ZWVuKHRleHRTcHJpdGUuR3JpZC5tYXJnaW4sIDUwMCwgVG9yY2guRWFzaW5nLlNtb290aCkuVG9cclxuICAgICAgICAgICAgdG9wOiAwXHJcblxyXG4gICAgICAgIEBnYW1lLlR3ZWVucy5Ud2Vlbih0ZXh0U3ByaXRlLCA1MDAsIFRvcmNoLkVhc2luZy5TbW9vdGgpLlRvXHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcclxuXHJcbiAgICAgICAgQEdyaWQuQXBwZW5kKHRleHRTcHJpdGUpXHJcblxyXG5cclxuZXhwb3J0cy5IVUQgPSBIVURcclxuIl19
//# sourceURL=C:\dev\js\Torch.js\Games\Zeldroid\Src\HUD.coffee