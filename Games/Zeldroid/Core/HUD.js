// Generated by CoffeeScript 1.12.1
(function() {
  var HUD, Terminal, exports,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  exports = this;

  HUD = (function() {
    function HUD(game1) {
      var barHeight, barLeftMargin, barTopMargin, barWidth, healthText, psycheText;
      this.game = game1;
      barWidth = 300;
      barHeight = 50;
      barLeftMargin = -100;
      barTopMargin = 35;
      this.build = JSON.parse(this.game.File("package"));
      this.hud_background = new Torch.Sprite(this.game, 0, 0);
      this.hud_background.Bind.Texture("hud_background");
      this.hud_background.Size.Scale(1, 1);
      this.hud_background.drawIndex = 100;
      this.hud_background.Size.height = this.Height(5);
      this.hud_background.Size.width = window.innerWidth;
      this.hud_background.fixed = true;
      this.build_info = new Torch.Text(this.game, 0, 0, {
        text: "Zeldroid-dev-build:" + this.build.GameConfig.Build,
        color: "red"
      });
      this.terminal = new Terminal(this.game);
      this.healthBar = new Torch.Shapes.Box(this.game, 0, 0, barWidth, barHeight, "green", "green");
      this.healthBar.Grid.Align("top", "right");
      this.healthBar.Grid.Margin(barLeftMargin, barTopMargin);
      this.psycheBar = new Torch.Shapes.Box(this.game, 0, 0, barWidth, barHeight, "purple", "purple");
      this.psycheBar.Grid.Align("bottom", "right");
      this.psycheBar.Grid.Margin(barLeftMargin, -barTopMargin);
      healthText = new Torch.Text(this.game, 0, 0, {
        text: "HEALTH",
        font: "Impact",
        fontSize: 32,
        color: "white"
      });
      healthText.Grid.CenterVertical();
      psycheText = new Torch.Text(this.game, 0, 0, {
        text: "PSYCHE",
        font: "Impact",
        fontSize: 32,
        color: "white"
      });
      psycheText.Grid.CenterVertical();
      this.healthBar.Grid.Append(healthText);
      this.psycheBar.Grid.Append(psycheText);
      this.hud_background.Grid.Append(this.build_info).Append(this.terminal).Append(this.healthBar).Append(this.psycheBar);
      this.game.Camera.position.y += this.hud_background.Size.height;
    }

    HUD.Load = function(game) {
      game.Load.Texture("Assets/Art/hud_background.png", "hud_background");
      return game.Load.Texture("Assets/Art/terminal.png", "terminal");
    };

    HUD.prototype.BindEvents = function() {};

    HUD.prototype.Width = function(scale) {
      if (scale == null) {
        scale = 1;
      }
      return window.innerWidth / scale;
    };

    HUD.prototype.Height = function(scale) {
      if (scale == null) {
        scale = 1;
      }
      return window.innerHeight / scale;
    };

    return HUD;

  })();

  Terminal = (function(superClass) {
    extend(Terminal, superClass);

    Terminal.prototype.currentTextOutput = null;

    function Terminal(game) {
      this.InitSprite(game, 0, 0);
      this.Bind.Texture("terminal");
      this.Size.Scale(2.5, 1.5);
      this.Grid.Center().CenterVertical();
    }

    Terminal.prototype.DisplayText = function(text) {
      var ref, textSprite;
      if ((ref = this.currentTextOutput) != null) {
        ref.Trash();
      }
      this.currentTextOutput = textSprite = new Torch.Text(this.game, 0, 0, {
        text: text,
        font: "Impact",
        color: "white",
        fontSize: 24
      });
      textSprite.Grid.Center().CenterVertical().Margin(0, 10);
      textSprite.opacity = 0;
      this.game.Tweens.Tween(textSprite.Grid.margin, 500, Torch.Easing.Smooth).To({
        top: 0
      });
      this.game.Tweens.Tween(textSprite, 500, Torch.Easing.Smooth).To({
        opacity: 1
      });
      return this.Grid.Append(textSprite);
    };

    return Terminal;

  })(Torch.Sprite);

  exports.HUD = HUD;

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\dev\js\Torch.js\Games\Zeldroid\Src\HUD.coffee