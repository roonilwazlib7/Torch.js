:Torch.Color
General Information:
    an object for colors
Basic Usage:
    :code
    //with red, green, blue, alpha values
    var color = new Torch.Color(12, 14, 45, 1);
    //NOTE:
    //the alpha value, at this point does not
    //really do anything

    //with html hex value
    var color = new Torch.Color("#ffffff");
    :endcode
Constructor:
    Args:
        redOrHex: INT or STRING,
            either the red rgb value, or
            the html color string
        g: INT(OPTIONAL),
            the green rgb value
        b: INT(OPTIONAL),
            the blue rgb value
        a: INT(OPTIONAL),
            the alpha value
Usable Members:
    Red: INT,
        red rgb value
    Green: INT,
        green rgb value
    Blue:  INT,
        blue rgb value
Usable Methods:
    GetRGBString():
        gets css representation of rgb values
        Args: NONE
    BlendHex():
        syncs rgb values from the hex string
        For Example:
        :code
        //create a color
        var color = new Torch.Color(15, 67, 89, 1);
        //change the hex
        color.hex = "#ffffff";
        //now the hex and rbg values
        //represent different colors

        //sync them
        color.BlendHex();
        :endcode
        hex -> rgb
        Args: NONE
    BlendRGB():
        synce hex value from rgb values
        For Example:
        :code
        //create a color
        var color = new Torch.Color("#ff00ff");
        //change the rbg values
        color.Red = 0;
        //now the hex and rbg values
        //represent different colors

        //sync them
        color.BlendRGB();
        :endcode
        rgb -> hex
:TODO
    ##  Maybe add support for mixing colors
:ENDTODO
