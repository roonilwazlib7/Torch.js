:Torch.Text
General Information:
    A special sprite that is used for displaying text. Displaying
    text with the HTML5 canvas is a finicky process. Repeatedly calling
    fillText or strokeText slows everything down to the point that it
    becomes more effecient to dynamically create a canvas, draw the text onto it,
    and convert it to an image to draw on the main canvas.
Basic Usage:
    :code
    var text = new Torch.Text(50, 50, {
        text: "Hello, World",
        color: "green"
    });
    :endcode
Constructor:
    Args:
        x: INT,
            x position
        y:  INT,
            y position
        data: OBJECT,
            object that holds optional data for the text object
            For example:
            :code
            {
                text: "Hello, World!"
                font: "Arial",
                fontSize: 24,
                fontWeight: bold,
                color: new Torch.Color(15, 67, 84, 1) // or new Torch.Color("#ffe45c")
                // if color is not an instance of Torch.Color, it will be converted
                // to one internally
            }
            :endcode

Usable Members:
    NOTE:
        Torch.Text inherits Torch.Sprite so it has everything that Torch.Sprite has and keep
        in mind that Torch.Text.Rectangle (which is a member inherited from Torch.Sprite) controls how big the container for
        the text is, so if the rectangle is too small, the text would be cut off

    font: STRING,
        the name of the font to use
    fontSize: INT,
        the size (in pixels) of the text
    fontWeight: STRING,
        bold, etc
    color: OBJECT (Torch.Color),
        color of the text
    text: STRING,
        holds text
Usable Methods:
    Render():
        creates the image of the text that is drawn
        each frame
        NOTE:
            if you change the value of 'text', Render is automatically
            called
        Args: NONE

:TODO
##  Allow option to have Torch.Text automatically
    fit the Rectangle to the Text

##  Add ability to parse returns (\n) within text
    so that line breaks can be created

##  Add support for padding

##  Add support for background color
:ENDTODO
