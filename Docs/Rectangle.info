:Torch.Rectangle
General Information:
    Torch.Rectangle has several pruposes within Torch. Each sprite holds on
    to a rectangle wich describes the sprite's x and y position as well as it's
    draw width and height.
Basic Usage:
    :code
    //creating a sprite initializes it with a zero-area rectangle
    var sprite = new Torch.Sprite(7,8);
    //binding a sprite to a texture, textureSheet, or texturePack
    //automatically sizes the sprite's rectangle
    sprite.Bind.Texture("texture_id");
    //but then you can change it
    sprite.Rectangle = new Torch.Rectangle(50, 50, 100, 100);

    //most useful part of Rectangle is intersection
    if (sprite.Rectangle.Intersects(otherSprite.Rectangle))
    {
        //do something
    }
    :endcode
Constructor:
    Args:
        x: INT,
            x position of rectangle
        y: INT,
            y position of rectangle
        width: INT,
            width of rectangle
        height: INT,
            height of rectangle
Usable Members:
    x: INT,
        x position of rectangle
    y: INT,
        y position of rectangle
    width: INT,
        width of rectangle
    height: INT,
        height of rectangle
Usable Methods:
    Intersects():
        Checks if rectangle intersects another rectangle
        For Example:
        :code
        //get the intersection offset
        var intersectionOffset = myRect.Intersects(otherRectangle)
        if (intersectionOffset)
        {
            doSomething(intersectionOffset);
        }
        :endcode
        Args:
            otherRectangle: OBJECT(Torch.Rectangle),
                the rectangle to check intersection against
        Returns: OBJECT or NULL,
            if intersection is detected, Intersects will return an
            object containing offset information of the intersection,
            if no intersection is detected it returns null
:TODO
:ENDTODO
